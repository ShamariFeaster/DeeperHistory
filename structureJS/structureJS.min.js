var structureJS=typeof structureJS!="undefined"?structureJS:{config:{module_base:"Modules/",global_base:"lib/",globals:[],commons:[]},_needTree:{},_files:[],_modules:{},loadScript:function(e,t){var n=document.getElementsByTagName("head")[0];var r=document.createElement("script");r.type="text/javascript";r.src=e;n.appendChild(r);r.onload=t},loadModules:function(e){function s(t){var n="";if(typeof t!="undefined"&&typeof t==="object")n=e.module_base+Object.keys(t)[0]+".js";else if(typeof t==="string")n=e.global_base+t+".js";return n}var t=this;var n=this.config.globals||[];var r=this.config.commons||[];var i=[];for(var o=r.length-1;o>=0;o--){var u={};u[r[o]]=null;t._files.unshift(u)}t._files=n.concat(t._files);var a=function(){var e=s(t._files.shift());if(e){console.log("Inside callback: loading "+e);t.loadScript(e,a)}else{console.log("Modules Done Loading. Enjoy structureJS!")}};this.loadScript(s(t._files.shift()),a)},detectCircularDependency:function(e){var t=null;var n="";var r="";var i="";for(var n in e){console.log("Checking "+n+"s dependencies");for(var s=0;s<e[n].length;s++){r=e[n][s];console.log("Dependency "+s+" of "+n+" is "+r);if(typeof e[r]!=="undefined"){for(var o=0;o<e[r].length;o++){i=e[r][o];console.log("Checking "+r+"s dependencies for circular reference to parent "+n);if(n==i){throw"ERROR: CIRCULAR DEPENDENCY: "+n+" is a dependency of its own dependency "+r}}}else{throw"ERROR: "+r+" is a dependency of "+n+" but has not been explicitly declared."}}}return false},orderImports:function(e){function i(e){return Object.keys(e)[0]}function s(e){var n=e||"";for(var r=0;r<t.length;r++){n+=i(t[r])+","}console.log(n)}function o(t){return e[t]}function u(e){for(var n=0;n<t.length;n++){if(e===i(t[n]))return n}}function a(e){for(var n=0;n<t.length;n++){if(e===i(t[n]))return t[n]}}function f(e,n){var r=u(i(e));var s=a(i(t[n]));var o=i(t[n]);console.log("Moving "+i(e)+"("+r+") in front of "+o+"("+n+")");var f=[];for(var l=0;l<t.length;l++){if(l<n){f.push(t[l])}else if(l==n){f.push(e)}else if(l>n){f.push(t[l-1])}}t=f}var t=[];for(var n in e){var r={};r[n]=e[n];t.push(r)}s("Starting Order: ",t);var l=0;var c="";var h=null;var p="";for(var d=0;d<t.length;d++){c=i(t[d]);l=u(c);h=o(c);console.log("Resolving: "+c+" Index: "+d);for(var n=0;n<h.length;n++){p=h[n];if(c===p)continue;if(u(p)>l){f(a(p),u(c))}}}return t},declare:function(e,t){if(typeof t=="undefined")t=[];this._needTree[e]=t},resolveDependencies:function(){function e(e,t){function n(e){return Object.keys(e)[0]}var r=e||"";for(var i=0;i<t.length;i++){r+=n(t[i])+","}console.log(r)}this.detectCircularDependency(this._needTree);this._files=this.orderImports(this._needTree,this._files);e("Resolved Order: ",this._files);this.loadModules(this.config)},module:function(e,t){function s(e){return n._modules[e]["module"]}if(typeof e=="undefined"||typeof e==="function")throw"Module Must Have Configuration Object Or Name String";if(typeof t!=="function")throw"Module Must Have A Function As It's Definition";var n=this;var r=null;var i={type:"unknown"};if(typeof e==="string")r=e;else if(typeof e==="object"){if(typeof e.name=="undefined")throw"Module Configuration Object Must Have Name Property";else r=e.name;if(typeof e.type!="undefined")i["type"]=e.type}s.amd=s;s._class=s;structureJS.require=s;s.getType=function(e){return n._modules[e]["type"]};i["module"]=t.call(null,s);if(typeof i["module"]=="undefined")throw"Module Function Definition Must Return Something";this._modules[r]=i},moduleAMD:function(e,t){var n={type:"amd",name:e};n["module"]=t.call(null).call(null);if(typeof n["module"]=="undefined")throw"Module Function Definition Must Return Something";console.log("AMD: Loading "+e);this._modules[e]=n},loadConfigAndManifest:function(e){var t=document.getElementById("structureJS");if(typeof t==="undefined"||t===null)throw'ERROR: No script tag with ID of "structureJS" which is required';var n=t.getAttribute("data-config");var r=t.getAttribute("data-manifest");if(typeof r==="undefined"||r===""||r===null)throw"ERROR: No manifest declared";var i=this;var s=function(){if(r!=null){console.log("Loading Manifest: "+r);i.loadScript(r+".js",s);r=null}else{console.log("Init Done Loading.");e.call(i)}};if(n){console.log("Loading Config: "+n);this.loadScript(n+".js",s)}else{this.loadScript(r+".js",function(){e.call(i)})}}};(function(e){e.define=function(t,n,r){e.structureJS.moduleAMD(t,r)};e.define.amd={jQuery:true};structureJS.loadConfigAndManifest(structureJS.resolveDependencies)})(window)